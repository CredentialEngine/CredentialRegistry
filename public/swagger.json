{
    "info": {
        "title": "MetadataRegistry API",
        "description": "Documentation for the new API endpoints",
        "contact": {
            "name": "Metadata Registry",
            "email": "learningreg-dev@googlegroups.com",
            "url": "https://github.com/learningtapestry/metadataregistry"
        },
        "license": {
            "name": "Apache License, Version 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "v1"
    },
    "swagger": "2.0",
    "produces": [
        "application/xml",
        "application/json",
        "application/octet-stream",
        "text/plain"
    ],
    "host": "lr-staging.learningtapestry.com",
    "tags": [
        {
            "name": "envelopes",
            "description": "Operations about envelopes"
        },
        {
            "name": "info",
            "description": "API info endpoints"
        }
    ],
    "paths": {
        "/": {
          "get": {
              "description": "shows the README rendered in HTML",
              "produces": [
                  "text/html"
              ],
              "responses": {
                  "200": {
                      "description": "shows the README rendered in HTML"
                  }
              },
              "tags": [
                "info"
              ],
              "operationId": "getHome"
          }
        },

        "/api": {
          "get": {
              "description": "API root",
              "produces": [
                  "application/json"
              ],
              "responses": {
                  "200": {
                      "description": "API root",
                      "schema": {
                          "$ref": "#/definitions/ApiRoot"
                      }
                  }
              },
              "tags": [
                "info"
              ],

              "operationId": "getApi"
          }
        },

        "/api/info": {
          "get": {
              "description": "General info about this API node",
              "produces": [
                  "application/json"
              ],
              "responses": {
                  "200": {
                      "description": "General info about this API node",
                      "schema": {
                          "$ref": "#/definitions/ApiInfo"
                      }
                  }
              },
              "tags": [
                "info"
              ],
              "operationId": "getApiInfo"
          }
        },

        "/api/schemas/info": {
          "get": {
              "description": "General info about the json-schemas",
              "produces": [
                  "application/json"
              ],
              "responses": {
                  "200": {
                      "description": "General info about the json-schemas",
                      "schema": {
                          "$ref": "#/definitions/ApiSchemasInfo"
                      }
                  }
              },
              "tags": [
                "info"
              ],
              "operationId": "getApiSchemasInfo"
          }
        },

        "/api/schemas/{schema_name}": {
          "get": {
              "description": "Get the corresponding json-schema",
              "produces": [
                  "application/json"
              ],
              "parameters": [
                  {
                      "in": "path",
                      "name": "schema_name",
                      "description": "Unique schema name",
                      "type": "string",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Get the corresponding json-schema",
                  }
              },
              "tags": [
                "info"
              ],
              "operationId": "getApiSchema"
          }
        },

        "/api/{community_name}/info": {
          "get": {
              "description": "General info about this metadata community",
              "produces": [
                  "application/json"
              ],
              "parameters": [
                  {
                      "in": "path",
                      "name": "community_name",
                      "description": "Unique community name",
                      "type": "string",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "General info about this metadata community",
                      "schema": {
                          "$ref": "#/definitions/ApiCommunityInfo"
                      }
                  }
              },
              "tags": [
                "info"
              ],
              "operationId": "getApiCommunityInfo"
          }
        },

        "/api/{community_name}/envelopes": {
            "get": {
                "description": "Retrieves all community envelopes ordered by date",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "community_name",
                        "description": "Unique community name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number",
                        "type": "integer",
                        "format": "int32",
                        "default": 1,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "per_page",
                        "description": "Items per page",
                        "type": "integer",
                        "format": "int32",
                        "default": 10,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieves all envelopes ordered by date",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Envelope"
                            }
                        }
                    }
                },
                "tags": [
                    "envelopes"
                ],
                "operationId": "getApiEnvelopes"
            },
            "post": {
                "description": "Publishes a new envelope",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "community_name",
                        "description": "Unique community name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "update_if_exists",
                        "description": "Whether to update the envelope if it already exists",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "name": "Envelope",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postRequestEnvelope"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Envelope updated",
                        "schema": {
                            "$ref": "#/definitions/Envelope"
                        }
                    },
                    "201": {
                        "description": "Envelope created",
                        "schema": {
                            "$ref": "#/definitions/Envelope"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/ValidationError"
                        }
                    }
                },
                "tags": [
                    "envelopes"
                ],
                "operationId": "postApiEnvelopes"
            },
            "put": {
                "description": "Marks envelopes matching a resource locator as deleted",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "community_name",
                        "description": "Unique community name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "url",
                        "description": "The URL that envelopes must match to be deleted",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "DeleteToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteToken"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Mathcing envelopes marked as deleted "
                    },
                    "404": {
                        "description": "No envelopes match the URL"
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/ValidationError"
                        }
                    }
                },
                "tags": [
                    "envelopes"
                ],
                "operationId": "putApiEnvelopes"
            }
        },

        "/api/{community_name}/envelopes/info": {
          "get": {
              "description": "Gives general info about this community envelopes",
              "produces": [
                  "application/json"
              ],
              "parameters": [
                  {
                      "in": "path",
                      "name": "community_name",
                      "description": "Unique community name",
                      "type": "string",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "General info about this metadata community",
                      "schema": {
                          "$ref": "#/definitions/ApiEnvelopesInfo"
                      }
                  }
              },
              "tags": [
                "info"
              ],
              "operationId": "getApiEnvelopesInfo"
          }
        },

        "/api/{community_name}/envelopes/{envelope_id}": {
            "get": {
                "description": "Retrieves an envelope by identifier",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "community_name",
                        "description": "Unique community name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "envelope_id",
                        "description": "Unique envelope identifier",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieves an envelope by identifier",
                        "schema": {
                            "$ref": "#/definitions/Envelope"
                        }
                    }
                },
                "tags": [
                    "envelopes"
                ],
                "operationId": "getApiEnvelopesEnvelopeId"
            },
            "patch": {
                "description": "Updates an existing envelope",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "community_name",
                        "description": "Unique community name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "envelope_id",
                        "description": "Unique envelope identifier",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "Envelope",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patchRequestEnvelope"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updates an existing envelope",
                        "schema": {
                            "$ref": "#/definitions/Envelope"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/ValidationError"
                        }
                    }
                },
                "tags": [
                    "envelopes"
                ],
                "operationId": "patchApiEnvelopesEnvelopeId"
            },
            "delete": {
                "description": "Marks an existing envelope as deleted",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "community_name",
                        "description": "Unique community name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "envelope_id",
                        "description": "Unique envelope identifier",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "DeleteToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteToken"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Marks an existing envelope as deleted"
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/ValidationError"
                        }
                    }
                },
                "tags": [
                    "envelopes"
                ],
                "operationId": "deleteApiEnvelopesEnvelopeId"
            }
        },

        "/api/{community_name}/envelopes/{envelope_id}/info": {
          "get": {
              "description": "Gives general info about the single envelope",
              "produces": [
                  "application/json"
              ],
              "parameters": [
                  {
                      "in": "path",
                      "name": "community_name",
                      "description": "Unique community name",
                      "type": "string",
                      "required": true
                  },
                  {
                      "in": "path",
                      "name": "envelope_id",
                      "description": "Unique envelope identifier",
                      "type": "string",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "General info about this metadata community",
                      "schema": {
                          "$ref": "#/definitions/ApiSingleEnvelopeInfo"
                      }
                  }
              },
              "tags": [
                "info"
              ],
              "operationId": "getApiEnvelopesEnvelopeIdInfo"
          }
        },

        "/api/envelopes/{envelope_id}/versions/{version_id}": {
            "get": {
                "description": "Retrieves a specific envelope version",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "envelope_id",
                        "description": "Unique envelope identifier",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version_id",
                        "description": "Unique version identifier",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieves a specific envelope version",
                        "schema": {
                            "$ref": "#/definitions/Envelope"
                        }
                    }
                },
                "tags": [
                    "envelopes"
                ],
                "operationId": "getApiEnvelopesEnvelopeIdVersionsVersionId"
            }
        }
    },

    "definitions": {
        "Envelope": {
            "type": "object",
            "properties": {
                "envelope_id": {
                    "type": "string",
                    "description": "Unique identifier (in UUID format)"
                },
                "envelope_type": {
                    "type": "string",
                    "description": "Type (currently only resource_data or paradata)"
                },
                "envelope_version": {
                    "type": "string",
                    "description": "Envelope version used"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource in its original encoded format"
                },
                "decoded_resource": {
                    "type": "string",
                    "description": "Resource in decoded form"
                },
                "resource_format": {
                    "type": "string",
                    "description": "Format of the submitted resource"
                },
                "resource_encoding": {
                    "type": "string",
                    "description": "Encoding of the submitted resource"
                },
                "node_headers": {
                    "$ref": "#/definitions/NodeHeaders",
                    "description": "Additional headers added by the node"
                }
            },
            "description": "Retrieves a specific envelope version"
        },

        "Version": {
            "type": "object",
            "properties": {
                "head": {
                    "type": "boolean",
                    "description": "Tells if it's the current version"
                },
                "event": {
                    "type": "string",
                    "description": "What change caused the new version"
                },
                "created_at": {
                    "type": "string",
                    "description": "When the version was created"
                },
                "actor": {
                    "type": "string",
                    "description": "Who performed the changes"
                },
                "url": {
                    "type": "string",
                    "description": "Version URL"
                }
            }
        },

        "NodeHeaders": {
            "type": "object",
            "properties": {
                "resource_digest": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Version"
                    },
                    "description": "Versions belonging to the envelope"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation date"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modification date"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Deletion date"
                }
            }
        },

        "DeleteToken": {
            "type": "object",
            "properties": {
                "delete_token": {
                    "type": "string",
                    "description": "Any piece of content signed with the user's private key"
                },
                "delete_token_format": {
                    "description": "Format of the submitted delete token",
                    "type": "string"
                },
                "delete_token_encoding": {
                    "description": "Encoding of the submitted delete token",
                    "type": "string"
                },
                "delete_token_public_key": {
                    "description": "Original key that signed the envelope",
                    "type": "string"
                }
            },
            "description": "Marks an envelope as deleted",
            "required": [
                "delete_token",
                "delete_token_format",
                "delete_token_encoding",
                "delete_token_public_key"
            ]
        },

        "ValidationError": {
            "type": "object",
            "properties": {
                "errors": {
                    "description": "List of validation error messages"
                },
                "json_schema": {
                    "description": "List of json-schema URLs used for validating this request",
                    "type": "array"
                }
            }
        },

        "postRequestEnvelope": {
            "type": "object",
            "properties": {
                "envelope_type": {
                    "type": "string",
                    "description": "Type (currently only resource_data or paradata)"
                },
                "envelope_version": {
                    "type": "string",
                    "description": "Envelope version used"
                },
                "envelope_id": {
                    "type": "string",
                    "description": "Unique envelope identifier"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource in encoded form"
                },
                "resource_format": {
                    "type": "string",
                    "description": "Format of the submitted resource"
                },
                "resource_encoding": {
                    "type": "string",
                    "description": "Encoding of the submitted resource"
                },
                "resource_public_key": {
                    "type": "string",
                    "description": "Original key that signed the envelope"
                }
            },
            "required": [
                "envelope_type",
                "envelope_version",
                "resource",
                "resource_format",
                "resource_encoding"
            ],
            "description": "Publishes a new envelope"
        },

        "patchRequestEnvelope": {
            "type": "object",
            "properties": {
                "envelope_id": {
                    "type": "string",
                    "description": "Unique envelope identifier",
                    "readOnly": true
                },
                "envelope_type": {
                    "type": "string",
                    "description": "Type (currently only resource_data or paradata)"
                },
                "envelope_version": {
                    "type": "string",
                    "description": "Envelope version used"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource in encoded form"
                },
                "resource_format": {
                    "type": "string",
                    "description": "Format of the submitted resource"
                },
                "resource_encoding": {
                    "type": "string",
                    "description": "Encoding of the submitted resource"
                },
                "resource_public_key": {
                    "type": "string",
                    "description": "Original key that signed the envelope"
                }
            },
            "required": [
                "envelope_type",
                "envelope_version",
                "resource",
                "resource_format",
                "resource_encoding"
            ],
            "description": "Updates an existing envelope"
        },

        "ApiRoot": {
          "type": "object",
          "properties": {
              "api_version": {
                  "type": "string",
                  "description": "API version number"
              },
              "total_envelopes": {
                  "type": "number",
                  "description": "Total count of metadata envelopes"
              },
              "metadata_communities": {
                  "type": "object",
                  "description": "Object with community names and their API endpoints"
              },
              "info": {
                  "type": "string",
                  "description": "URL for the API info"
              }
          }
        },

        "ApiInfo": {
            "type": "object",
            "properties": {
                "metadata_communities": {
                    "type": "object",
                    "description": "Object with community names and their API endpoints"
                },
                "postman": {
                    "type": "string",
                    "description": "URL for the postman collection"
                },
                "swagger": {
                    "type": "string",
                    "description": "URL for the Swagger docs"
                },
                "readme": {
                    "type": "string",
                    "description": "URL for the repo's README doc"
                },
                "docs": {
                    "type": "string",
                    "description": "URL for the docs folder"
                }
            }
        },

        "ApiSchemasInfo": {
            "type": "object",
            "properties": {
                "available_schemas": {
                    "type": "array",
                    "description": "List of json-schema URLs available"
                },
                "specification": {
                    "type": "string",
                    "description": "URL for the json-schema spec"
                }
            }
        },

        "ApiCommunityInfo": {
            "type": "object",
            "properties": {
                "total_envelopes": {
                    "type": "number",
                    "description": "Total count of envelopes for this community"
                },
                "backup_item": {
                    "type": "string",
                    "description": "Internet Archive backup item identifier"
                }
            }
        },

        "ApiEnvelopesInfo": {
            "type": "object",
            "properties": {
                "POST": {
                    "type": "object",
                    "description": "Info for POST requests",
                    "properties": {
                        "accepted_schemas": {
                            "description": "List of accepted_schemas",
                            "type": "array"
                        }
                    }
                },
                "PUT": {
                    "type": "object",
                    "description": "Info for PUT requests",
                    "properties": {
                        "accepted_schemas": {
                            "description": "List of accepted_schemas",
                            "type": "array"
                        }
                    }
                }
            }
        },

        "ApiSingleEnvelopeInfo": {
            "type": "object",
            "properties": {
                "PATCH": {
                    "type": "object",
                    "description": "Info for PATCH requests",
                    "properties": {
                        "accepted_schemas": {
                            "description": "List of accepted_schemas",
                            "type": "array"
                        }
                    }
                },
                "DELETE": {
                    "type": "object",
                    "description": "Info for DELETE requests",
                    "properties": {
                        "accepted_schemas": {
                            "description": "List of accepted_schemas",
                            "type": "array"
                        }
                    }
                }
            }
        }
    }
}
