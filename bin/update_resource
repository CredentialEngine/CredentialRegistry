#!/usr/bin/env ruby

# helper script to update a resource

require 'jwt'

if ARGV.length != 5
  puts 'USAGE: update_resource RESOURCE ENVELOPE_ID PRIVATE_KEY PUBLIC_KEY TARGET_SERVER'
  exit
end

RESOURCE      = ARGV[0]
ENVELOPE_ID   = ARGV[1]
PRIVATE_KEY   = ARGV[2]
PUBLIC_KEY    = ARGV[3]
TARGET_SERVER = ARGV[4]

ENVELOPES_URL = "#{TARGET_SERVER}/resources".freeze

priv_key = OpenSSL::PKey::RSA.new(File.read(PRIVATE_KEY))

resouce_name = RESOURCE.split('/').last
fname = "./tmp/envelope_UPDATE_#{resouce_name}.json"
resource = JSON.parse(File.read(RESOURCE))

print "#{RESOURCE} => #{fname} => "

envelope = {
  "envelope_type": 'resource_data',
  "envelope_version": '1.0.0',
  "envelope_community": 'ce_registry',
  "envelope_id": ENVELOPE_ID,
  "resource": JWT.encode(resource, priv_key, 'RS256'),
  "resource_format": 'json',
  "resource_encoding": 'jwt',
  "resource_public_key": File.read(PUBLIC_KEY)
}

File.write fname, envelope.to_json

result = `curl -s -XPOST #{ENVELOPES_URL} -d @#{fname} -H "Content-Type: application/json"`

if result =~ /created_at/
  puts 'success'
else
  puts 'failure'

  if `command -v jq >/dev/null 2>&1` && $?.exitstatus == 0
    puts `echo '#{result}' | jq .`
  else
    puts result
  end
end
