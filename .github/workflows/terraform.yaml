name: Terraform CI

on:
  pull_request:
    paths:
      - 'terraform/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action: plan or apply'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  fmt-validate:
    name: Terraform fmt & validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/environments/eks
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform fmt
        run: terraform fmt -check -recursive

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/github-oidc-widget
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

  plan:
    name: Terraform plan
    needs: fmt-validate
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event.inputs.action == 'plan'
    defaults:
      run:
        working-directory: terraform/environments/eks
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/github-oidc-widget
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform plan
        id: plan
        run: |
          terraform plan -input=false -no-color -out=tfplan
          terraform show -no-color tfplan > plan.txt

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/environments/eks/plan.txt

  apply:
    name: Terraform apply
    needs: plan
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
    environment:
      name: terraform-apply
    defaults:
      run:
        working-directory: terraform/environments/eks
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/github-oidc-widget
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform plan (for apply)
        run: terraform plan -input=false -no-color -out=tfplan

      - name: Terraform apply
        run: terraform apply -input=false -auto-approve tfplan
